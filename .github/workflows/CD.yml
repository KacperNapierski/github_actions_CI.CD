name: Continous Deployment

on:
    workflow_dispatch:
    pull_request:
      branches:
        - main
      paths:
        - 'web/**'
    push:
      branches:
        - main
      paths:
        - 'web/**'

defaults:
    run:
      shell: bash
      # Define the working directory for all run steps in the workflow
      working-directory: ./web

jobs:
    deploy_staging:
        environment: staging
        name: "Deploy to staging"
        runs-on: ubuntu:latest

        steps:
            - uses: actions/checkout@v3
            name: checkout

            - uses: Burnett01/rsync-deployments@6.0.0
            name: Staging Deploy
            with:
                switches: -avzr --delete
                path: ./web
                remote_path: /var/app
                remote_host: ${{ secrets.HOSTNAME }}
                remote_user: ${{ secrets.REMOTE_USER }}
                remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: SSH Execute Commands
            uses: JimCronqvist/action-ssh@1.0.0
            with:
                hosts: '${{ secrets.REMOTE_USER }}@${{ secrets.HOSTNAME }}'
                privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
                command: |
                  cd /var/app/web
                  npm ci
                  pm2 start /var/app/web/bin/www || pm2 restart /var/app/web/bin/www
                  sudo service nginx restart

    deploy_production:
    environment: production
    name: 'Deploy to production'
    runs-on: ubuntu-latest
    needs: deploy_staging

    steps:
        - uses: actions/checkout@v3
        name: checkout

        - uses: Burnett01/rsync-deployments@6.0.0
        name: Staging Deploy
        with:
            switches: -avzr --delete
            path: ./web
            remote_path: /var/app
            remote_host: ${{ secrets.HOSTNAME }}
            remote_user: ${{ secrets.REMOTE_USER }}
            remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

        - name: SSH Execute Commands
        uses: JimCronqvist/action-ssh@1.0.0
        with:
            hosts: '${{ secrets.REMOTE_USER }}@${{ secrets.HOSTNAME }}'
            privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
            command: |
              cd /var/app/web
              npm ci
              pm2 start /var/app/web/bin/www || pm2 restart /var/app/web/bin/www
              sudo service nginx restart
        
  